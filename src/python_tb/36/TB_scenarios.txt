scenario: Basic Increment Operation
description: Set train_valid=1 and train_taken=1 for multiple cycles to verify counter increments correctly from initial value until saturation at 3

scenario: Basic Decrement Operation
description: Set train_valid=1 and train_taken=0 for multiple cycles to verify counter decrements correctly until reaching 0

scenario: Saturation at Maximum
description: Start from state=3, assert train_valid=1 and train_taken=1 to verify counter remains at 3 (maximum saturation)

scenario: Saturation at Minimum
description: Start from state=0, assert train_valid=1 and train_taken=0 to verify counter remains at 0 (minimum saturation)

scenario: Training Disabled
description: Set train_valid=0 with varying train_taken values to verify counter maintains its current value

scenario: Asynchronous Reset
description: Assert areset at different counter values and verify immediate reset to 2'b01 (weakly not-taken) regardless of clock edge

scenario: Alternating Training Patterns
description: Alternate between increment and decrement conditions to verify correct state transitions in both directions

scenario: Reset During Training
description: Assert reset while training is active to verify reset priority and proper resumption of operation
