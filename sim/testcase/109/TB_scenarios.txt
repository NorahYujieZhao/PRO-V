scenario: All Zeros Input
description: Set all input bits to 0 to verify out_both shows all 0s, out_any shows all 0s, and out_different shows all 0s

scenario: All Ones Input
description: Set all input bits to 1 to verify out_both shows all 1s, out_any shows all 1s, and out_different shows all 0s

scenario: Alternating Bits
description: Set input to alternating 1s and 0s (0xAAAAAAAA pattern) to test out_both=0, out_any showing pairs, and out_different showing all 1s

scenario: Left Edge Case
description: Test behavior at leftmost bit (in[99]) by setting specific patterns to verify correct neighbor comparison for out_both[98] and wrap-around for out_different[99]

scenario: Right Edge Case
description: Test behavior at rightmost bit (in[0]) by setting specific patterns to verify correct neighbor comparison for out_any[1]

scenario: Walking One
description: Shift a single 1 through all 100 positions to verify correct neighbor detection in all three output vectors

scenario: Walking Zero
description: Shift a single 0 through all-ones vector to verify correct neighbor detection in all three output vectors

scenario: Random Patterns
description: Apply pseudo-random bit patterns to verify comprehensive functionality across all comparison types

scenario: Wrap-around Verification
description: Test specific patterns between in[0] and in[99] to verify correct wrap-around behavior for out_different

