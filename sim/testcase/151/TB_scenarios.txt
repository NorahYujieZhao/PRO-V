scenario: Basic Pattern Detection
description: Input the pattern 1101 and verify shift_ena is asserted for exactly 4 clock cycles while capturing duration bits

scenario: Partial Pattern Reset
description: Send partial patterns (110, 11) followed by reset to verify FSM properly restarts pattern detection from beginning

scenario: False Pattern Detection
description: Send similar but incorrect patterns (1100, 1111, 0101) to verify FSM doesn't trigger on wrong sequences

scenario: Counting State Transition
description: After pattern detection and 4-bit capture, verify counting signal asserts and remains high until done_counting

scenario: Completion Handshake
description: When done_counting asserts, verify done signal activates and remains until ack is received

scenario: Reset During Operation
description: Assert reset during different FSM states to verify proper return to initial pattern detection state

scenario: Multiple Timer Cycles
description: Complete multiple timer cycles (pattern->count->done->ack) to verify FSM properly loops

scenario: Quick Acknowledgment
description: Assert ack immediately after done signal to test fastest possible timer cycle completion

scenario: Delayed Acknowledgment
description: Wait multiple clock cycles before asserting ack to verify FSM maintains done state

scenario: Signal Timing Verification
description: Verify all output signals (shift_ena, counting, done) assert and deassert on correct clock edges

