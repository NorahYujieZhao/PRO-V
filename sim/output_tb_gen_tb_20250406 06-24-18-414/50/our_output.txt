[True, {'out': '[\n  {\n    "scenario": "AllZeros",\n    "output variable": [\n      {\n        "out_both": "000",\n        "out_any": "000",\n        "out_different": "0000"\n      }\n    ]\n  },\n  {\n    "scenario": "AllOnes",\n    "output variable": [\n      {\n        "out_both": "111",\n        "out_any": "111",\n        "out_different": "0000"\n      }\n    ]\n  },\n  {\n    "scenario": "AlternatingBits",\n    "output variable": [\n      {\n        "out_both": "000",\n        "out_any": "111",\n        "out_different": "1111"\n      }\n    ]\n  },\n  {\n    "scenario": "SingleOneHot",\n    "output variable": [\n      {\n        "out_both": "000",\n        "out_any": "110",\n        "out_different": "0110"\n      }\n    ]\n  },\n  {\n    "scenario": "AdjacentPairOnes",\n    "output variable": [\n      {\n        "out_both": "001",\n        "out_any": "011",\n        "out_different": "1010"\n      }\n    ]\n  },\n  {\n    "scenario": "WrapAroundDifferent",\n    "output variable": [\n      {\n        "out_both": "000",\n        "out_any": "100",\n        "out_different": "1100"\n      }\n    ]\n  },\n  {\n    "scenario": "UpperBoundaryCheck",\n    "output variable": [\n      {\n        "out_both": "100",\n        "out_any": "110",\n        "out_different": "1010"\n      }\n    ]\n  },\n  {\n    "scenario": "LowerBoundaryCheck",\n    "output variable": [\n      {\n        "out_both": "000",\n        "out_any": "001",\n        "out_different": "1001"\n      }\n    ]\n  }\n]\n', 'err': '', 'haserror': 0}, '']